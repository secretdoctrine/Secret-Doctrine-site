= form_for [refinery, :authors_admin, @poem] do |f|
  = render '/refinery/admin/error_messages',
              :object => @poem,
              :include_object_name => true

  - if @poem.id.nil?
    / This is 'new'
    = f.hidden_field :author_id, {:value => @parent.id}
    = f.hidden_field :order_number, {:value => @parent.get_next_order_number}
  - else
    / This is 'edit'
    = f.hidden_field :author_id, {:value => @poem.author_id}
    = f.hidden_field :order_number, {:value => @poem.order_number}

  %div.field
    = f.label :title
    = f.text_field :title

  %div.field
    = render '/refinery/admin/tabbed_fields',
                :f => f,
                :tabbed_fields => [:content, :short_content, :name_comment, :alt_top_block],
                :object => "authors/poem"

  %div.field
    = f.label :picture
    = render '/refinery/admin/image_picker',
               :f => f,
               :field => :picture_id,
               :image => @poem.picture,
               :toggle_image_display => false

  %div.field
    = f.label :tile_picture
    = render '/refinery/admin/image_picker',
               :f => f,
               :field => :tile_picture_id,
               :image => @poem.tile_picture,
               :toggle_image_display => false

  %div.field
    = f.label :preview_picture
    = render '/refinery/admin/image_picker',
               :f => f,
               :field => :preview_picture_id,
               :image => @poem.preview_picture,
               :toggle_image_display => false

  %div.field
    = f.label :image_caption
    = f.text_field :image_caption

  %div.field
    = f.label :name_second_line
    = f.text_field :name_second_line

  = render '/refinery/admin/form_actions', :f => f,
             :continue_editing => false,
             :delete_title => t('delete', :scope => 'refinery.poems.admin.poems.poem'),
             :delete_confirmation => t('message', :scope => 'refinery.admin.delete')

